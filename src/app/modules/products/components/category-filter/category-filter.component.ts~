import { Component, OnInit, Output, EventEmitter } from '@angular/core';
import { Store } from '@ngrx/store';
import { Observable } from 'rxjs';
import { ICategory } from '../../../../shared/models/category.model';
import { selectAllCategories } from '../../../../store/category/category.selectors';
import { NzTreeNodeOptions } from 'ng-zorro-antd/core/tree';
import {AppState} from "../../../../store";

@Component({
  selector: 'app-category-filter',
  templateUrl: './category-filter.component.html',
  styleUrls: ['./category-filter.component.scss']
})
export class CategoryFilterComponent implements OnInit {
  @Output() categorySelected = new EventEmitter<number>();
  categories$: Observable<ICategory[]>;
  nodes: NzTreeNodeOptions[] = [];
  expandKeys: string[] = [];
  value: string | null = null;

  constructor(private store: Store<AppState>) {
    this.categories$ = this.store.select(selectAllCategories);
    this.categories$.subscribe(categories => {
      console.log('Categories:', categories); // Debug log
      this.nodes = this.convertToTreeNodes(categories);
      this.expandKeys = this.nodes.map(node => node.key); // Set initial expanded keys
    });
  }

  ngOnInit(): void {}

  onChange(value: string): void {
    console.log(`Selected Category ID: ${value}`);
    this.categorySelected.emit(+value);
  }

  convertToTreeNodes(categories: ICategory[]): NzTreeNodeOptions[] {
    return categories.map(category => this.mapCategoryToTreeNode(category));
  }

  mapCategoryToTreeNode(category: ICategory): NzTreeNodeOptions {
    return {
      title: category.name,
      key: category.id.toString(),
      children: category.children?.map(child => this.mapCategoryToTreeNode(child)) ?? []
    };
  }
}
